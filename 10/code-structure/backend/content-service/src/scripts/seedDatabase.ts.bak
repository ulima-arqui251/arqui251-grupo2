// Script para poblar la base de datos con datos de prueba
import { v4 as uuidv4 } from 'uuid';
import { Sequelize } from 'sequelize';
import { initModels } from '../models';
import { config } from 'dotenv';
import { CourseStatus, LessonType, MaterialType, DifficultyLevel } from '../types/common';

// Cargar variables de entorno
config();

// Configuraci√≥n de base de datos
const sequelize = new Sequelize({
  dialect: 'mysql',
  host: process.env.DB_HOST || 'localhost',
  port: parseInt(process.env.DB_PORT || '3306'),
  database: process.env.DB_NAME || 'studymate_dev',
  username: process.env.DB_USER || 'studymate',
  password: process.env.DB_PASSWORD || '12345',
  logging: false // Silenciar logs para el seeding
});

// Inicializar modelos
const models = initModels(sequelize);

// Datos de ejemplo
const categoriesData = [
  {
    id: uuidv4(),
    name: 'Programaci√≥n',
    description: 'Cursos de desarrollo de software y programaci√≥n',
    slug: 'programacion',
    isActive: true,
    orderIndex: 1
  },
  {
    id: uuidv4(),
    name: 'Dise√±o Gr√°fico',
    description: 'Cursos de dise√±o digital y creatividad visual',
    slug: 'diseno-grafico',
    isActive: true,
    orderIndex: 2
  },
  {
    id: uuidv4(),
    name: 'Marketing Digital',
    description: 'Estrategias de marketing online y redes sociales',
    slug: 'marketing-digital',
    isActive: true,
    orderIndex: 3
  },
  {
    id: uuidv4(),
    name: 'Idiomas',
    description: 'Aprendizaje de idiomas extranjeros',
    slug: 'idiomas',
    isActive: true,
    orderIndex: 4
  },
  {
    id: uuidv4(),
    name: 'Datos y Analytics',
    description: 'An√°lisis de datos, machine learning y estad√≠stica',
    slug: 'datos-analytics',
    isActive: true,
    orderIndex: 5
  }
];

const instructorIds = [
  uuidv4(), // Juan P√©rez - Programaci√≥n
  uuidv4(), // Mar√≠a Garc√≠a - Dise√±o
  uuidv4(), // Carlos L√≥pez - Marketing
  uuidv4(), // Ana Mart√≠nez - Idiomas
  uuidv4()  // David Wilson - Datos
];

const coursesData = [
  // Programaci√≥n
  {
    id: uuidv4(),
    title: 'JavaScript Moderno - De Principiante a Experto',
    description: 'Aprende JavaScript desde cero hasta conceptos avanzados. Incluye ES6+, async/await, APIs y m√°s.',
    instructorId: instructorIds[0],
    categoryId: categoriesData[0].id,
    status: CourseStatus.PUBLISHED,
    difficultyLevel: DifficultyLevel.BEGINNER,
    duration: 2400, // 40 horas
    price: 89.99,
    thumbnailUrl: '/thumbnails/javascript-course.jpg',
    previewVideoUrl: '/previews/javascript-intro.mp4',
    requirements: ['Conocimientos b√°sicos de computaci√≥n', 'Ganas de aprender'],
    learningOutcomes: ['Dominar JavaScript ES6+', 'Crear aplicaciones web interactivas', 'Trabajar con APIs'],
    tags: ['javascript', 'programacion', 'web-development'],
    maxStudents: 100,
    currentStudents: 45,
    averageRating: 4.7,
    totalRatings: 123,
    isPublic: true
  },
  {
    id: uuidv4(),
    title: 'React.js Completo - Hooks, Context y Redux',
    description: 'Construcci√≥n de aplicaciones web modernas con React. Desde componentes b√°sicos hasta gesti√≥n de estado compleja.',
    instructorId: instructorIds[0],
    categoryId: categoriesData[0].id,
    status: 'published' as const,
    difficultyLevel: 'intermediate' as const,
    duration: 3000, // 50 horas
    price: 129.99,
    thumbnailUrl: '/thumbnails/react-course.jpg',
    requirements: ['JavaScript intermedio', 'HTML y CSS'],
    learningOutcomes: ['Crear SPAs con React', 'Gestionar estado con Redux', 'Implementar hooks personalizados'],
    tags: ['react', 'javascript', 'frontend'],
    maxStudents: 80,
    currentStudents: 67,
    averageRating: 4.8,
    totalRatings: 89,
    isPublic: true
  },
  {
    id: uuidv4(),
    title: 'Python para Data Science',
    description: 'An√°lisis de datos con Python, Pandas, NumPy y visualizaci√≥n con Matplotlib y Seaborn.',
    instructorId: instructorIds[4],
    categoryId: categoriesData[4].id,
    status: 'published' as const,
    difficultyLevel: 'intermediate' as const,
    duration: 2800, // 46.7 horas
    price: 99.99,
    thumbnailUrl: '/thumbnails/python-data-science.jpg',
    requirements: ['Matem√°ticas b√°sicas', 'L√≥gica de programaci√≥n'],
    learningOutcomes: ['Analizar datos con Pandas', 'Crear visualizaciones', 'Estad√≠stica descriptiva'],
    tags: ['python', 'data-science', 'analytics'],
    maxStudents: 120,
    currentStudents: 89,
    averageRating: 4.6,
    totalRatings: 156,
    isPublic: true
  },
  // Dise√±o
  {
    id: uuidv4(),
    title: 'Dise√±o UI/UX con Figma',
    description: 'Aprende a crear interfaces atractivas y funcionales. Desde wireframes hasta prototipos interactivos.',
    instructorId: instructorIds[1],
    categoryId: categoriesData[1].id,
    status: 'published' as const,
    difficultyLevel: 'beginner' as const,
    duration: 2200, // 36.7 horas
    price: 79.99,
    thumbnailUrl: '/thumbnails/figma-design.jpg',
    requirements: ['Conocimientos b√°sicos de dise√±o', 'Creatividad'],
    learningOutcomes: ['Dominar Figma', 'Crear prototipos interactivos', 'Principios de UX'],
    tags: ['figma', 'ui-ux', 'design'],
    maxStudents: 60,
    currentStudents: 34,
    averageRating: 4.5,
    totalRatings: 67,
    isPublic: true
  },
  {
    id: uuidv4(),
    title: 'Adobe Photoshop Avanzado',
    description: 'T√©cnicas profesionales de edici√≥n de im√°genes, composici√≥n digital y retoque fotogr√°fico.',
    instructorId: instructorIds[1],
    categoryId: categoriesData[1].id,
    status: 'published' as const,
    difficultyLevel: 'advanced' as const,
    duration: 3200, // 53.3 horas
    price: 149.99,
    thumbnailUrl: '/thumbnails/photoshop-advanced.jpg',
    requirements: ['Photoshop b√°sico', 'Conocimientos de dise√±o'],
    learningOutcomes: ['T√©cnicas avanzadas de retoque', 'Composici√≥n digital', 'Workflow profesional'],
    tags: ['photoshop', 'design', 'photo-editing'],
    maxStudents: 40,
    currentStudents: 28,
    averageRating: 4.9,
    totalRatings: 45,
    isPublic: true
  },
  // Marketing
  {
    id: uuidv4(),
    title: 'Marketing Digital Completo 2025',
    description: 'Estrategias modernas de marketing online: SEO, SEM, redes sociales y email marketing.',
    instructorId: instructorIds[2],
    categoryId: categoriesData[2].id,
    status: 'published' as const,
    difficultyLevel: 'intermediate' as const,
    duration: 2600, // 43.3 horas
    price: 109.99,
    thumbnailUrl: '/thumbnails/marketing-digital.jpg',
    requirements: ['Conocimientos b√°sicos de marketing', 'Familiaridad con redes sociales'],
    learningOutcomes: ['Crear campa√±as efectivas', 'Optimizar SEO', 'Analizar m√©tricas'],
    tags: ['marketing', 'seo', 'social-media'],
    maxStudents: 150,
    currentStudents: 112,
    averageRating: 4.4,
    totalRatings: 189,
    isPublic: true
  },
  // Idiomas
  {
    id: uuidv4(),
    title: 'Ingl√©s Conversacional Intensivo',
    description: 'Mejora tu fluidez en ingl√©s con pr√°ctica intensiva de conversaci√≥n y pronunciaci√≥n.',
    instructorId: instructorIds[3],
    categoryId: categoriesData[3].id,
    status: 'published' as const,
    difficultyLevel: 'intermediate' as const,
    duration: 1800, // 30 horas
    price: 69.99,
    thumbnailUrl: '/thumbnails/english-conversation.jpg',
    requirements: ['Ingl√©s b√°sico', 'Micr√≥fono para pr√°ctica'],
    learningOutcomes: ['Fluidez conversacional', 'Pronunciaci√≥n clara', 'Confianza al hablar'],
    tags: ['english', 'conversation', 'pronunciation'],
    maxStudents: 25,
    currentStudents: 18,
    averageRating: 4.7,
    totalRatings: 34,
    isPublic: true
  }
];

// Funci√≥n principal de seeding
async function seedDatabase() {
  try {
    console.log('üå± Iniciando seeding de la base de datos...');
    
    // Conectar a la base de datos
    await sequelize.authenticate();
    console.log('‚úÖ Conexi√≥n a la base de datos establecida');
    
    // Limpiar datos existentes (opcional - descomenta si quieres empezar limpio)
    // console.log('üßπ Limpiando datos existentes...');
    // await sequelize.sync({ force: true });
    
    // Crear categor√≠as
    console.log('üìÅ Creando categor√≠as...');
    const { Category } = models;
    for (const categoryData of categoriesData) {
      await Category.create(categoryData);
    }
    console.log(`‚úÖ ${categoriesData.length} categor√≠as creadas`);
    
    // Crear cursos
    console.log('üìö Creando cursos...');
    const { Course } = models;
    const createdCourses = [];
    for (const courseData of coursesData) {
      const course = await Course.create(courseData);
      createdCourses.push(course);
    }
    console.log(`‚úÖ ${coursesData.length} cursos creados`);
    
    // Crear lecciones para cada curso
    console.log('üìñ Creando lecciones...');
    const { Lesson } = models;
    let totalLessons = 0;
    
    for (const course of createdCourses) {
      const lessonsCount = Math.floor(Math.random() * 8) + 5; // 5-12 lecciones por curso
      
      for (let i = 0; i < lessonsCount; i++) {
        const lessonData = {
          id: uuidv4(),
          courseId: course.id,
          title: `Lecci√≥n ${i + 1}: ${getLessonTitle(course.title, i)}`,
          description: `Descripci√≥n detallada de la lecci√≥n ${i + 1} del curso ${course.title}`,
          type: getLessonType(i),
          content: getLessonContent(course.title, i + 1),
          videoUrl: `/videos/${course.id}/lesson-${i + 1}.mp4`,
          duration: Math.floor(Math.random() * 30) + 10, // 10-40 minutos
          orderIndex: i + 1,
          isPreview: i === 0 // Primera lecci√≥n como preview
        };
        
        await Lesson.create(lessonData);
        totalLessons++;
      }
    }
    console.log(`‚úÖ ${totalLessons} lecciones creadas`);
    
    // Crear materiales
    console.log('üìÑ Creando materiales...');
    const { Material } = models;
    let totalMaterials = 0;
    
    for (const course of createdCourses) {
      const materialsCount = Math.floor(Math.random() * 5) + 3; // 3-7 materiales por curso
      
      for (let i = 0; i < materialsCount; i++) {
        const materialData = {
          id: uuidv4(),
          courseId: course.id,
          title: `Material ${i + 1}: ${getMaterialTitle(course.title, i)}`,
          description: `Material complementario para el curso ${course.title}`,
          type: getMaterialType(i),
          fileUrl: `/materials/${course.id}/material-${i + 1}.pdf`,
          fileName: `material-${i + 1}.pdf`,
          fileSize: Math.floor(Math.random() * 5000000) + 100000, // 100KB - 5MB
          mimeType: getMaterialMimeType(i),
          orderIndex: i + 1,
          isDownloadable: true
        };
        
        await Material.create(materialData);
        totalMaterials++;
      }
    }
    console.log(`‚úÖ ${totalMaterials} materiales creados`);
    
    console.log('üéâ ¬°Seeding completado exitosamente!');
    console.log('üìä Resumen:');
    console.log(`   ‚Ä¢ ${categoriesData.length} categor√≠as`);
    console.log(`   ‚Ä¢ ${coursesData.length} cursos`);
    console.log(`   ‚Ä¢ ${totalLessons} lecciones`);
    console.log(`   ‚Ä¢ ${totalMaterials} materiales`);
    
  } catch (error) {
    console.error('‚ùå Error durante el seeding:', error);
  } finally {
    await sequelize.close();
  }
}

// Funciones auxiliares
function getLessonTitle(courseTitle: string, index: number): string {
  if (courseTitle.includes('JavaScript')) {
    const titles = ['Introducci√≥n a JavaScript', 'Variables y Tipos de Datos', 'Funciones y Scope', 'Arrays y Objetos', 'DOM Manipulation', 'Eventos', 'Async/Await', 'APIs y Fetch'];
    return titles[index] || `Tema Avanzado ${index + 1}`;
  }
  if (courseTitle.includes('React')) {
    const titles = ['Componentes B√°sicos', 'Props y State', 'Hooks Fundamentales', 'useEffect y Lifecycle', 'Context API', 'Redux Basics', 'Testing Components', 'Deployment'];
    return titles[index] || `Concepto Avanzado ${index + 1}`;
  }
  if (courseTitle.includes('Python')) {
    const titles = ['Introducci√≥n a Python', 'Pandas B√°sico', 'NumPy Arrays', 'Visualizaci√≥n con Matplotlib', 'Seaborn Avanzado', 'An√°lisis Estad√≠stico', 'Machine Learning Intro', 'Proyecto Final'];
    return titles[index] || `An√°lisis Avanzado ${index + 1}`;
  }
  return `Contenido ${index + 1}`;
}

function getLessonType(index: number): 'video' | 'text' | 'quiz' | 'assignment' | 'interactive' {
  const types: ('video' | 'text' | 'quiz' | 'assignment' | 'interactive')[] = ['video', 'text', 'quiz', 'assignment', 'interactive'];
  if (index % 4 === 3) return 'quiz';
  if (index % 5 === 4) return 'assignment';
  if (index % 6 === 5) return 'interactive';
  return index % 2 === 0 ? 'video' : 'text';
}

function getLessonContent(courseTitle: string, lessonNumber: number): string {
  return `# Lecci√≥n ${lessonNumber}

En esta lecci√≥n del curso "${courseTitle}" aprender√°s conceptos fundamentales que te ayudar√°n a dominar el tema.

## Objetivos de Aprendizaje
- Comprender los conceptos clave
- Aplicar conocimientos pr√°cticos
- Resolver ejercicios propuestos

## Contenido
Este es el contenido detallado de la lecci√≥n con ejemplos pr√°cticos y ejercicios.

### Ejercicios Pr√°cticos
1. Ejercicio b√°sico
2. Ejercicio intermedio
3. Proyecto pr√°ctico

## Recursos Adicionales
- Enlaces a documentaci√≥n
- Videos complementarios
- Lecturas recomendadas`;
}

function getMaterialTitle(courseTitle: string, index: number): string {
  const materialTypes = ['Gu√≠a de Referencia', 'Ejercicios Pr√°cticos', 'C√≥digo Fuente', 'Documentaci√≥n Adicional', 'Cheat Sheet', 'Proyecto Final', 'Recursos Extra'];
  return materialTypes[index] || `Recurso ${index + 1}`;
}

function getMaterialType(index: number): 'pdf' | 'video' | 'audio' | 'image' | 'document' | 'link' {
  const types: ('pdf' | 'video' | 'audio' | 'image' | 'document' | 'link')[] = ['pdf', 'document', 'link', 'pdf', 'video', 'document'];
  return types[index % types.length];
}

function getMaterialMimeType(index: number): string {
  const mimeTypes = ['application/pdf', 'application/msword', 'text/plain', 'application/pdf', 'video/mp4', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
  return mimeTypes[index % mimeTypes.length];
}

// Ejecutar el seeding
if (require.main === module) {
  seedDatabase();
}

export default seedDatabase;
